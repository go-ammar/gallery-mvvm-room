plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id("androidx.navigation.safeargs")
    id 'dagger.hilt.android.plugin'

}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.example.galleryapplicatoin"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    dataBinding {
        enabled = true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.leanback:leanback:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Fragment
    implementation "androidx.fragment:fragment-ktx:1.4.1"

    implementation("androidx.recyclerview:recyclerview:1.2.1")
    // For control over item selection of both touch and mouse driven selection
    implementation("androidx.recyclerview:recyclerview-selection:1.1.0")

    // Kotlin
    implementation("androidx.navigation:navigation-fragment-ktx:2.3.5")
    implementation("androidx.navigation:navigation-ui-ktx:2.3.5")

    // Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:2.3.5")

    // Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:2.3.5")

    // Jetpack Compose Integration
    implementation("androidx.navigation:navigation-compose:2.4.0-alpha07")


    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    testImplementation 'junit:junit:4.13.2'

    //Glide
    implementation("com.squareup.okhttp3:okhttp-urlconnection:4.4.1")
    implementation 'com.squareup.okhttp3:okhttp:4.7.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.4.1'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:4.4.1'

    implementation 'com.github.bumptech.glide:glide:4.12.0'
    // Glide v4 uses this new annotation processor -- see https://bumptech.github.io/glide/doc/generatedapi.html
    kapt 'com.github.bumptech.glide:compiler:4.12.0'


    //Room dependencies
    implementation "androidx.room:room-runtime:2.3.0"
    kapt "androidx.room:room-compiler:2.3.0"

// optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:2.3.0"


    implementation "com.google.dagger:hilt-android:2.39.1"
    kapt "com.google.dagger:hilt-android-compiler:2.39.1"

    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
// Basic Dagger 2 (required)
//    implementation "com.google.dagger:dagger:2.28.3"
//    kapt "com.google.dagger:dagger-compiler:2.24"
// dagger.android package (optional)
//    implementation "com.google.dagger:dagger-android:2.35.1"
//    kapt "com.google.dagger:dagger-android-processor:2.24"
// Support library support (optional)
//    kapt "com.google.dagger:dagger-android-support:2.24"

    //hilt
    implementation 'com.google.dagger:hilt-android:2.39.1'
    annotationProcessor 'com.google.dagger:hilt-compiler:2.39.1'
}